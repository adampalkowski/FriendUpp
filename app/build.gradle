plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id "com.google.gms.google-services"
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id "com.google.firebase.crashlytics"

}

android {
    namespace 'com.palkowski.friendupp'
    compileSdk 33
    testOptions {
        unitTests {
            // Provide a mock implementation of android.util.Log for tests
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    defaultConfig {
        applicationId "com.palkowski.friendupp"
        minSdk 28
        targetSdk 33
        versionCode 3
        versionName "1.0.1"
        testInstrumentationRunner = "com.palkowski.friendupp.CustomTestRunner"

     //   testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()

        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        manifestPlaceholders = [MAPS_API_KEY: "${properties.getProperty('MAPS_API_KEY')}"]

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_9
        targetCompatibility JavaVersion.VERSION_1_9
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'com.google.ar:core:1.11.0'
    implementation(platform("com.google.firebase:firebase-bom:32.2.0"))

    implementation("com.google.firebase:firebase-crashlytics-ktx")
    implementation("com.google.firebase:firebase-analytics-ktx")
    implementation 'com.google.android.play:core:1.10.0' // For Play Core Library


    implementation 'androidx.test:core-ktx:1.5.0'
    implementation 'com.google.ar:core:1.30.0'
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_version")
// Needed for createAndroidComposeRule, but not createComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version")
    implementation "com.google.accompanist:accompanist-permissions:0.30.1"

    implementation("com.marosseleng.android:compose-material3-datetime-pickers:0.7.1")
    //snapper
    androidTestImplementation  "dev.chrisbanes.snapper:snapper:v0.3.0"
    implementation 'com.github.commandiron:WheelPickerCompose:1.1.11'

    implementation 'com.firebase:geofire-android-common:3.2.0'
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44.2"
    implementation 'com.google.android.gms:play-services-auth:20.6.0'
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose_version"
    // Import the BoM for the Firebase platAform
    implementation platform('com.google.firebase:firebase-bom:32.1.0')

    // Add the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth-ktx'

    // Also add the dependency for the Google Play services library and specify its version
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    //geohash
    implementation 'com.firebase:geofire-android-common:3.2.0'
    implementation 'com.google.firebase:firebase-storage-ktx:20.2.0'
    implementation platform('com.google.firebase:firebase-bom:31.2.2')
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.1.1')

    // Add the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies

    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    //glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation 'com.google.android.gms:play-services-location:18.0.0'
    // CameraX core library using the camera2 implementation
    def camerax_version = "1.3.0-alpha07"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation("androidx.camera:camera-core:${camerax_version}")
    implementation("androidx.camera:camera-camera2:${camerax_version}")
    // If you want to additionally use the CameraX Lifecycle library
    implementation("androidx.camera:camera-lifecycle:${camerax_version}")
    // If you want to additionally use the CameraX View class
    implementation("androidx.camera:camera-view:${camerax_version}")
    // If you want to additionally use the CameraX Extensions library
    implementation("androidx.camera:camera-extensions:${camerax_version}")
    //maps
    implementation 'com.google.maps.android:maps-compose:2.11.4'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.camera:camera-core:1.2.2'
    implementation 'androidx.camera:camera-view:1.2.2'
    implementation 'androidx.camera:camera-lifecycle:1.2.2'
    def nav_version = "2.5.3"

    implementation("androidx.navigation:navigation-compose:$nav_version")
    //anim nav
    implementation "com.google.accompanist:accompanist-navigation-animation:0.30.0"
    //sys ui conttroller used in themes
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0')
    androidTestImplementation('androidx.test:runner:1.4.0')
    androidTestImplementation('androidx.test:rules:1.4.0')

    implementation 'androidx.compose.material:material:1.4.0-alpha02'
    implementation("io.coil-kt:coil-compose:2.3.0")
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha11'
    implementation 'androidx.navigation:navigation-runtime-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    //realtime database for notifications
    implementation(platform("com.google.firebase:firebase-bom:32.1.1"))

    // Add the dependency for the Realtime Database library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation("com.google.firebase:firebase-database-ktx")

    //testings
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0"

    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'org.mockito:mockito-android:3.12.4'
    // For Robolectric tests.
    testImplementation 'com.google.dagger:hilt-android-testing:2.44'
    // ...with Kotlin.
    kaptTest 'com.google.dagger:hilt-android-compiler:2.44.2'
    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44.2'
    // ...with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44.2'
    androidTestImplementation "androidx.test.ext:junit:1.1.5"


}
kapt {
    correctErrorTypes true
}